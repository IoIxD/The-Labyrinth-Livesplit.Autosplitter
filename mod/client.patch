--- net/minecraft/src/EntityRenderer.java
+++ net/minecraft/src/EntityRenderer.java
@@ -10,6 +10,7 @@
 import org.lwjgl.opengl.GLContext;
 import org.lwjgl.opengl.NVFogDistance;
 import org.lwjgl.util.glu.GLU;
+import org.lwjgl.input.Keyboard;
 
 public class EntityRenderer {
 	private Minecraft mc;
@@ -31,6 +32,9 @@
 	public EntityRenderer(Minecraft var1) {
 		this.mc = var1;
 		this.itemRenderer = new ItemRenderer(var1);
+		if(!LabyrinthModNative.Loaded) {
+			LabyrinthModNative.Setup(this.mc);
+		}
 	}
 
 	public void updateRenderer() {
@@ -270,6 +274,9 @@
 			if(this.mc.theWorld != null) {
 				this.renderWorld(var1);
 				this.mc.ingameGUI.renderGameOverlay(var1, this.mc.currentScreen != null, var10, var11);
+				if(!Keyboard.isKeyDown(Keyboard.KEY_F3)) {
+					LabyrinthModNative.Update();
+				}
 			} else {
 				GL11.glViewport(0, 0, this.mc.displayWidth, this.mc.displayHeight);
 				GL11.glClearColor(0.0F, 0.0F, 0.0F, 0.0F);
--- /dev/null
+++ net/minecraft/src/LabyrinthModNative.java
@@ -1,0 +1,72 @@
+package net.minecraft.src;
+
+import java.awt.DisplayMode;
+import java.lang.reflect.Field;
+import java.util.Map;
+import org.lwjgl.opengl.Display;
+import net.minecraft.client.Minecraft;
+
+public class LabyrinthModNative {
+    public static boolean Loaded = false;
+    private static long TimeSinceTried = 0;
+    private static Minecraft mc;
+    private static boolean TryDrawLBMStatus = true;
+    private static Thread runThread = null;
+
+    public static void Setup(Minecraft mc) {
+        LabyrinthModNative.mc = mc;
+        
+        try {
+            System.out.println("Looking in "+System.getProperty("java.library.path")+" for libraries");
+            System.loadLibrary("LabyrinthModNative");
+            LabyrinthModNative.init();
+            LabyrinthModNative.Loaded = true;
+        } catch(UnsatisfiedLinkError ex) {
+            System.out.println("Could not load native library! "+ex.toString());
+            LabyrinthModNative.Loaded = false;
+        }
+        LabyrinthModNative.TimeSinceTried = System.currentTimeMillis();
+    }
+
+    public static native void init();
+
+    public static native void setCoords(double x, double y, double z);
+
+    public static void Update() {
+        if(LabyrinthModNative.Loaded) {
+            LabyrinthModNative.setCoords(TileEntityRenderer.staticPlayerX, TileEntityRenderer.staticPlayerY, TileEntityRenderer.staticPlayerZ);
+        }
+        try {
+            FontRenderer renderer = mc.fontRenderer;
+
+            String xStr = String.valueOf((int)TileEntityRenderer.staticPlayerX);
+            String yStr = String.valueOf((int)TileEntityRenderer.staticPlayerY);
+            String zStr = String.valueOf((int)TileEntityRenderer.staticPlayerZ);
+
+            if(renderer != null) {
+                renderer.drawStringWithShadow("x: "+xStr, 2, 12, 16777215);
+                renderer.drawStringWithShadow("y: "+yStr, 2, 22, 16777215);
+                renderer.drawStringWithShadow("z: "+zStr, 2, 32, 16777215);
+            }
+            if(LabyrinthModNative.TryDrawLBMStatus) {
+                int lbmPosition = 2;
+                long timeSinceTried = (System.currentTimeMillis() - LabyrinthModNative.TimeSinceTried);
+                if(timeSinceTried >= 5000) {
+                    if(timeSinceTried <= 6000) {
+                        lbmPosition = 2 - ((int)(timeSinceTried - 5000) / 5);
+                    } else {
+                        LabyrinthModNative.TryDrawLBMStatus = false;
+                    }
+                }
+                if(LabyrinthModNative.Loaded) {
+                    renderer.drawStringWithShadow("LabyrinthModNative detected", lbmPosition, 42, 43520);
+                } else {
+                    renderer.drawStringWithShadow("LabyrinthModNative not detected", lbmPosition, 42, 10101010);
+                }
+            }
+        } catch(Exception ex){
+            System.out.println(ex.toString());
+        }
+    }
+
+}
